{"version":3,"sources":["component/ContactForm/ContactForm.module.css","component/ContactList/ContactList.module.css","component/Filter/Filter.module.css","component/Section/Section.module.css","component/ContactForm/ContactForm.js","component/ContactList/ContactList.js","component/Filter/Filter.js","component/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputChahge","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","form","label","input","onChange","type","pattern","title","required","button","Component","ContactList","contacts","onDelete","list","map","id","item","onClick","Filter","Section","children","section","App","filter","formSubmitHandler","contact","v4","find","toLowerCase","alert","changeFilter","e","deleteContact","contactId","prevState","filteredContacts","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49325369.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__-Ceyk\",\"label\":\"ContactForm_label__QW9wl\",\"input\":\"ContactForm_input__P9zgu\",\"button\":\"ContactForm_button__2Kaie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2UKWR\",\"item\":\"ContactList_item__3rn0G\",\"button\":\"ContactList_button__1na0H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2v5If\",\"label\":\"Filter_label__3dcuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3s965\"};","import {Component} from \"react\";\r\nimport styles from './ContactForm.module.css'\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleInputChahge = event =>{\r\n        const {name, value} = event.currentTarget\r\n        this.setState({[name] : value})\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        this.props.onSubmit(this.state)\r\n        this.reset()\r\n    }\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {name, number} = this.state;\r\n        return (\r\n\r\n            <form onSubmit={this.handleSubmit} className={styles.form}>\r\n                <label className={styles.label}> Name\r\n                    <input className={styles.input}\r\n                        onChange={this.handleInputChahge}\r\n                        value={name}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label className={styles.label}> Number\r\n                    <input className={styles.input}\r\n                        onChange={this.handleInputChahge}\r\n                        value={number}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"Submit\" className={styles.button}>Add</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nexport default ContactForm","import PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\nconst ContactList = ({contacts, onDelete }) => {\r\nreturn (\r\n    <ul className={styles.list}>\r\n        {contacts.map(({ id, name, number}) => (\r\n            <li key={id} className={styles.item}>\r\n                {name}: {number}\r\n                <button onClick={() => onDelete(id)} type=\"button\" className={styles.button}>DELETE</button>\r\n\r\n            </li>\r\n\r\n        ))}\r\n    </ul>\r\n);\r\n}\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList\r\n","import styles from './Filter.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\n  const Filter = ({value, onChange}) => (\r\n      <label className={styles.label}>\r\n          <input type=\"text\" value={value} onChange={onChange} className={styles.input}/>\r\n      </label>\r\n  )\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n  export default Filter","import PropTypes from 'prop-types'\r\nimport styles from './Section.module.css'\r\nconst Section = ({children}) => (\r\n    <section className={styles.section}> {children}\r\n    </section>\r\n)\r\nSection.propTypes = {children: PropTypes.node,\r\n};\r\nexport default Section\r\n","\nimport {Component} from \"react\";\nimport { v4 } from 'uuid';\nimport './App.css';\nimport ContactForm from './component/ContactForm'\nimport ContactList from './component/ContactList'\nimport Filter from './component/Filter'\nimport Section from \"./component/Section\";\n\n\n\n class App extends Component {\n\n\n     state = {\n         contacts: [\n             {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n             {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n             {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n             {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n         ],\n         filter: '',\n     }\n\n     formSubmitHandler = ({ name, number }) => {\n         const contact = {\n             id: v4(),\n             name,\n             number,\n         };\n\n         const { contacts } = this.state;\n\n         if (\n             contacts.find(\n                 ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n             )\n         ) {\n             alert(`${name} is already in contacts`);\n         } else {\n             this.setState(({ contacts }) => ({\n                 contacts: [contact, ...contacts],\n             }));\n         }\n     };\n      changeFilter = e => {\n          this.setState({\n              filter: e.currentTarget.value\n          })\n      }\n     deleteContact = contactId => {\n         this.setState(prevState => ({\n             contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n         }));\n     };\n     render() {\n         const {contacts, filter} = this.state\n       const filteredContacts = contacts.filter((contact) =>\n           contact.name.toLowerCase().includes(filter.toLowerCase())\n\n       );\n    return (\n        <Section>\n\n\n            <h1>Phonebook</h1>\n            <ContactForm  onSubmit = {this.formSubmitHandler}/>\n\n            <h2>Contacts</h2>\n            <h2>Find contacts by name</h2>\n\n            <Filter value={filter} onChange={this.changeFilter} />\n\n            <ContactList  onDelete ={this.deleteContact} contacts={filteredContacts}/>\n\n\n        </Section>\n    )\n   }\n }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}